package com.myapp.ecommerce.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import java.util.Map;
import java.util.Objects;

@DynamoDBTable(tableName = "cart")
public class Cart {
    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    public String getId() {
        return id;
    }

    @Override
    public String toString() {
        return "Cart{" +
                "id='" + id + '\'' +
                ", userId='" + userId + '\'' +
                ", price=" + price +
                ", items=" + items +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Cart cart = (Cart) o;
        return Double.compare(price, cart.price) == 0 && Objects.equals(id, cart.id) && Objects.equals(userId, cart.userId) && Objects.equals(items, cart.items);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, userId, price, items);
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public Map<String, Integer> getItems() {
        return items;
    }

    public void setItems(Map<String, Integer> items) {
        this.items = items;
    }

    public Cart() {
    }

    public Cart(String id, String userId, double price, Map<String, Integer> items) {
        this.id = id;
        this.userId = userId;
        this.price = price;
        this.items = items;
    }

    @DynamoDBAttribute
    private String userId;
    @DynamoDBAttribute
    private double price;
    @DynamoDBAttribute
    private Map<String, Integer> items;
}
